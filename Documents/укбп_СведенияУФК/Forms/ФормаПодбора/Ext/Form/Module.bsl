
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСхемы = Параметры.АдресСхемы;
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	СКД = ПолучитьИзВременногоХранилища(Параметры.АдресСхемы);
	Настройки = СКД.НастройкиПоУмолчанию;
	
	АдресБанковскогоСчета = Параметры.БанковскийСчет;	
	
	Для Каждого ЭлементОтбора Из Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("БанковскийСчет") Тогда 
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементОтбора.ПравоеЗначение = АдресБанковскогоСчета;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьНаСервере()
	
	СКД = ПолучитьИзВременногоХранилища(Параметры.АдресСхемы);
	Настройки = СКД.НастройкиПоУмолчанию;
	
	#Область Параметры
	
	СтруктураПараметров = Новый Структура;
	
	//Интервал
	СтруктураПараметров.Вставить("НачалоПериода", 	НачалоГода(ТекущаяДата()));
	СтруктураПараметров.Вставить("КонецПериода", 	КонецГода(ТекущаяДата()));
	
	//Типы цен
	СтруктураПараметров.Вставить("ТипЦенОриент", 	Справочники.ТипыЦенНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("3b6e1bdb-44a4-11e9-b603-001e679b1aa4")));//Ориентировочная цена
	СтруктураПараметров.Вставить("ТипЦенФиксир", 	Справочники.ТипыЦенНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("3b6e1bdc-44a4-11e9-b603-001e679b1aa4")));//Фиксированная цена
	
	//Статьи УФК
	СтруктураПараметров.Вставить("СтатьяУФК7440", 	Справочники.укбп_СтатьиУльяновскогоКазначействаПоРасходованиюДС.ПолучитьСсылку(Новый УникальныйИдентификатор("9762c1e1-82ea-11eb-80f0-001e6726dbfb"))); //7440 Средства по контрактам (договорам), заключаемым
	СтруктураПараметров.Вставить("СтатьяПрибыль", 	Справочники.укбп_СтатьиУльяновскогоКазначействаПоРасходованиюДС.ПолучитьСсылку(Новый УникальныйИдентификатор("9762c1df-82ea-11eb-80f0-001e6726dbfb"))); //0999 Выплата прибыли
	СтруктураПараметров.Вставить("СтатьяНДС", 		Справочники.укбп_СтатьиУльяновскогоКазначействаПоРасходованиюДС.ПолучитьСсылку(Новый УникальныйИдентификатор("9762c1e0-82ea-11eb-80f0-001e6726dbfb"))); //0811 Налог на добавленную стоимость
	
	#КонецОбласти
	
	#Область Отбор
	
	ТиповыеОтчеты.СкопироватьЭлементы(Настройки.Отбор, КомпоновщикНастроек.Настройки.Отбор);
	
	#КонецОбласти
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	ПолучитьДанныеНаОснованииСКД(СКД, КомпоновщикНастроек.Настройки, ТаблицаДанных, СтруктураПараметров);
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	
	ТаблицаДанных = ЗаполнитьНаСервере();
	
	Закрыть(ТаблицаДанных);	
	
КонецПроцедуры

// Заполняет переданный объект на основани СКД
//
// Параметры
//
//  СКД – собствеено настройки СКД
//
//  ОбъектДляЗагрузки – объект в который выгружаются данные, таблица значений, дерево значений, табличный документ
//
//  ИсполняемыеНастройки – Пользовательские настройки СКД если не указаны будут использованы настроки СКД по умолчанию
//
//  СтруктураПараметров - Структура – Передаваемые для СКД параметры
&НаСервере
Процедура ПолучитьДанныеНаОснованииСКД(СКД, ИсполняемыеНастройки = Неопределено, ОбъектДляЗагрузки, СтруктураПараметров = Неопределено, РасшифровкаСКД = Неопределено, МакетКомпоновки = Неопределено, ВнешниеНаборыДанных = Неопределено)
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ТипГенератора = Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений");
	
	Если ИсполняемыеНастройки = Неопределено Тогда
		ИсполняемыеНастройки = СКД.НастройкиПоУмолчанию;
	КонецЕсли;
	
	Если СтруктураПараметров <> Неопределено Тогда
		КоллекцияЗначенийПараметров = ИсполняемыеНастройки.ПараметрыДанных.Элементы;
		Для каждого Параметр Из СтруктураПараметров Цикл
			НайденноеЗначениеПараметра = КоллекцияЗначенийПараметров.Найти(Параметр.Ключ);
			Если НайденноеЗначениеПараметра <> Неопределено Тогда
				НайденноеЗначениеПараметра.Использование = Истина;
				НайденноеЗначениеПараметра.Значение = Параметр.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	МакетКомпоновкиСКД = КомпоновщикМакета.Выполнить(СКД, ИсполняемыеНастройки, РасшифровкаСКД, МакетКомпоновки, ТипГенератора);
	ПроцессорКомпановки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпановки.Инициализировать(МакетКомпоновкиСКД, ВнешниеНаборыДанных, РасшифровкаСКД, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ОбъектДляЗагрузки);

	ПроцессорВывода.ОтображатьПроцентВывода = Истина;
	ПроцессорВывода.Вывести(ПроцессорКомпановки, Истина);	
	
КонецПроцедуры // ПолучитьДанныеНаОснованииСКД(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ТаблицаДанных, СтруктураПараметров, )()
